{"version":3,"file":"getVideoSrc.js","names":["getVideoSrc","asset","secrets","playbackId","getPlaybackId","searchParams","URLSearchParams","isSigned","token","generateJwt","signingKeyId","signingKeyPrivate","set"],"sources":["../../src/util/getVideoSrc.ts"],"sourcesContent":["import {generateJwt} from './generateJwt'\nimport {getPlaybackId} from './getPlaybackId'\nimport {isSigned} from './isSigned'\nimport type {MuxVideoUrl, Secrets, SignableSecrets, VideoAssetDocument} from './types'\n\ninterface VideoSrcOptions {\n  asset: VideoAssetDocument\n  secrets: Secrets | SignableSecrets\n}\n\nexport function getVideoSrc({asset, secrets}: VideoSrcOptions): MuxVideoUrl {\n  const playbackId = getPlaybackId(asset)\n  const searchParams = new URLSearchParams()\n\n  if (isSigned(asset, secrets as SignableSecrets)) {\n    const token = generateJwt(\n      playbackId,\n      // eslint-disable-next-line no-warning-comments\n      // @TODO figure out why isSigned doesn't manage to narrow down secrets to SignableSecrets\n      (secrets as SignableSecrets).signingKeyId,\n      (secrets as SignableSecrets).signingKeyPrivate,\n      'v'\n    )\n    searchParams.set('token', token)\n  }\n\n  return `https://stream.mux.com/${playbackId}.m3u8?${searchParams}`\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAQO,SAASA,WAAT,OAAqE;EAAA,IAA/CC,KAA+C,QAA/CA,KAA+C;EAAA,IAAxCC,OAAwC,QAAxCA,OAAwC;EAC1E,IAAMC,UAAU,GAAG,IAAAC,4BAAA,EAAcH,KAAd,CAAnB;EACA,IAAMI,YAAY,GAAG,IAAIC,eAAJ,EAArB;;EAEA,IAAI,IAAAC,kBAAA,EAASN,KAAT,EAAgBC,OAAhB,CAAJ,EAAiD;IAC/C,IAAMM,KAAK,GAAG,IAAAC,wBAAA,EACZN,UADY,EAEZ;IACA;IACCD,OAAD,CAA6BQ,YAJjB,EAKXR,OAAD,CAA6BS,iBALjB,EAMZ,GANY,CAAd;IAQAN,YAAY,CAACO,GAAb,CAAiB,OAAjB,EAA0BJ,KAA1B;EACD;;EAED,wCAAiCL,UAAjC,mBAAoDE,YAApD;AACD"}
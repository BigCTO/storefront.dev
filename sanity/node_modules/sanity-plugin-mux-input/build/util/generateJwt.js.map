{"version":3,"file":"generateJwt.js","names":["generateJwt","playbackId","signingKeyId","signingKeyPrivate","aud","payload","privateKey","Buffer","from","sign","JSON","parse","stringify","_","v","undefined","algorithm","keyid","audience","subject","noTimestamp","expiresIn"],"sources":["../../src/util/generateJwt.ts"],"sourcesContent":["import {sign} from 'jsonwebtoken'\n\nimport type {ThumbnailOptions} from './types'\n\nexport type Audience = 'g' | 's' | 't' | 'v'\n\nexport type Payload<T extends Audience> = T extends 'g'\n  ? never\n  : T extends 's'\n  ? never\n  : T extends 't'\n  ? ThumbnailOptions\n  : T extends 'v'\n  ? never\n  : never\n\nexport function generateJwt<T extends Audience>(\n  playbackId: string,\n  signingKeyId: string,\n  signingKeyPrivate: string,\n  aud: T,\n  payload?: Payload<T>\n): string {\n  const privateKey = Buffer.from(signingKeyPrivate, 'base64')\n  return sign(\n    payload ? JSON.parse(JSON.stringify(payload, (_, v) => v ?? undefined)) : {},\n    privateKey,\n    {\n      algorithm: 'RS256',\n      keyid: signingKeyId,\n      audience: aud,\n      subject: playbackId,\n      noTimestamp: true,\n      expiresIn: '12h',\n    }\n  )\n}\n"],"mappings":";;;;;;;AAAA;;AAgBO,SAASA,WAAT,CACLC,UADK,EAELC,YAFK,EAGLC,iBAHK,EAILC,GAJK,EAKLC,OALK,EAMG;EACR,IAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYL,iBAAZ,EAA+B,QAA/B,CAAnB;EACA,OAAO,IAAAM,kBAAA,EACLJ,OAAO,GAAGK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeP,OAAf,EAAwB,CAACQ,CAAD,EAAIC,CAAJ,KAAUA,CAAV,aAAUA,CAAV,cAAUA,CAAV,GAAeC,SAAvC,CAAX,CAAH,GAAmE,EADrE,EAELT,UAFK,EAGL;IACEU,SAAS,EAAE,OADb;IAEEC,KAAK,EAAEf,YAFT;IAGEgB,QAAQ,EAAEd,GAHZ;IAIEe,OAAO,EAAElB,UAJX;IAKEmB,WAAW,EAAE,IALf;IAMEC,SAAS,EAAE;EANb,CAHK,CAAP;AAYD"}
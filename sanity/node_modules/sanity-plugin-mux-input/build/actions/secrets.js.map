{"version":3,"file":"secrets.js","names":["cache","secrets","exists","fetchSecrets","Promise","resolve","client","fetch","then","Boolean","token","secretKey","enableSignedUrls","signingKeyId","signingKeyPrivate","saveSecrets","doc","_id","_type","createOrReplace","createSigningKeys","dataset","clientConfig","request","url","withCredentials","method","testSecrets","haveValidSigningKeys","res","data","id","e","console","error","testSecretsObservable","defer","observable"],"sources":["../../src/actions/secrets.ts"],"sourcesContent":["import {defer} from 'rxjs'\n\nimport client from '../clients/SanityClient'\nimport type {Secrets} from '../util/types'\n\nconst cache: {secrets: Secrets | null; exists: boolean} = {\n  secrets: null,\n  exists: false,\n}\n\nexport function fetchSecrets() {\n  if (cache.exists) {\n    return Promise.resolve(cache)\n  }\n\n  return client.fetch('*[_id == \"secrets.mux\"][0]').then((secrets: Secrets | null) => {\n    cache.exists = Boolean(secrets)\n    cache.secrets = {\n      token: secrets?.token || null,\n      secretKey: secrets?.secretKey || null,\n      enableSignedUrls: secrets?.enableSignedUrls || false,\n      signingKeyId: secrets?.signingKeyId || null,\n      signingKeyPrivate: secrets?.signingKeyPrivate || null,\n    }\n    return cache\n  })\n}\n\nexport function saveSecrets(\n  token: string,\n  secretKey: string,\n  enableSignedUrls: boolean,\n  signingKeyId: string,\n  signingKeyPrivate: string\n) {\n  const doc = {\n    _id: 'secrets.mux',\n    _type: 'mux.apiKey',\n    token,\n    secretKey,\n    enableSignedUrls,\n    signingKeyId,\n    signingKeyPrivate,\n  }\n\n  return client.createOrReplace(doc).then(() => {\n    cache.exists = true\n    cache.secrets = {\n      token,\n      secretKey,\n      enableSignedUrls,\n      signingKeyId,\n      signingKeyPrivate,\n    }\n    return cache.secrets\n  })\n}\n\nexport function createSigningKeys() {\n  const dataset = client.clientConfig.dataset\n  return client.request<{data: {private_key: string; id: string; created_at: string}}>({\n    url: `/addons/mux/signing-keys/${dataset}`,\n    withCredentials: true,\n    method: 'POST',\n  })\n}\n\nexport function testSecrets() {\n  const dataset = client.clientConfig.dataset\n  return client.request<{status: boolean}>({\n    url: `/addons/mux/secrets/${dataset}/test`,\n    withCredentials: true,\n    method: 'GET',\n  })\n}\n\nexport async function haveValidSigningKeys(signingKeyId: string, signingKeyPrivate: string) {\n  if (!(signingKeyId && signingKeyPrivate)) {\n    return false\n  }\n\n  const dataset = client.clientConfig.dataset\n  try {\n    const res = await client.request<{data: {id: string; created_at: string}}>({\n      url: `/addons/mux/signing-keys/${dataset}/${signingKeyId}`,\n      withCredentials: true,\n      method: 'GET',\n    })\n    //\n    // if this signing key is valid it will return { data: { id: 'xxxx' } }\n    //\n    return !!(res.data && res.data.id)\n  } catch (e) {\n    console.error('Error fetching signingKeyId', signingKeyId, 'assuming it is not valid')\n    return false\n  }\n}\n\nexport function testSecretsObservable() {\n  const dataset = client.clientConfig.dataset\n  return defer(() =>\n    client.observable.request<{status: boolean}>({\n      url: `/addons/mux/secrets/${dataset}/test`,\n      withCredentials: true,\n      method: 'GET',\n    })\n  )\n}\n"],"mappings":"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"}